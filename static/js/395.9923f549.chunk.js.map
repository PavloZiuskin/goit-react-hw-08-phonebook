{"version":3,"file":"static/js/395.9923f549.chunk.js","mappings":"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","sources":["redux/contacts/contactsSelectors.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/ContactItem/ContactItem.styled.js","components/Control/Controls.styled.js","components/Control/Controls.jsx","components/EditForm/EditForm.styled.js","components/EditForm/EditForm.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filterValue) => {\n    const normalizedFilter = filterValue.toLocaleLowerCase().trim();\n    const visibleContacts = contacts.filter(contact =>\n      contact.name.toLocaleLowerCase().includes(normalizedFilter)\n    );\n    return visibleContacts;\n  }\n);\n\nexport const selectFilteredContactsByNumber = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filterValue) => {\n    const normalizedFilter = filterValue.trim();\n    const visibleContacts = contacts.filter(contact =>\n      contact.number.includes(normalizedFilter)\n    );\n    return visibleContacts;\n  }\n);","import styled from '@emotion/styled';\n\nexport const FormStyled = styled.form`\n  padding: 16px 10px;\n  display: flex;\n  flex-direction: column;\n  gap: 25px;\n  font-family: 'Segoe UI';\n  font-size: 18px;\n  border: 1px solid #1664e2;\n  border-radius: 8px;\n`;\n\nexport const Form = styled.form`\n  margin-left: auto;\n  margin-right: auto;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const CustomError = styled.div`\n  position: absolute;\n  top: 100%;\n  left: 0;\n  padding: 3px;\n  width: 160px;\n  border: 1px solid red;\n  border-radius: 4px;\n  color: red;\n  font-size: 12px;\n`;\n","\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/contactsOperation';\nimport { selectContacts } from 'redux/contacts/contactsSelectors';\nimport { toast } from 'react-hot-toast';\nimport { nanoid } from '@reduxjs/toolkit';\nimport { Form } from 'components/ContactForm/ContactForm.styled';\nimport { Button, TextField } from '@mui/material';\n\nconst nameRegExp = \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\";\nconst phoneRegExp =\n  '+?d{1,4}?[-.s]?(?d{1,3}?)?[-.s]?d{1,4}[-.s]?d{1,4}[-.s]?d{1,9}';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const form = evt.currentTarget;\n    const name = form.elements.name.value;\n    const number = form.elements.number.value;\n\n    const isNotUnique = contacts.some(contact => contact.name === name);\n    if (isNotUnique) {\n      return toast.success(`\"${name}\" is already in contacts.`);\n    }\n\n    dispatch(\n      addContact({\n        id: nanoid(),\n        name,\n        number,\n      })\n    );\n    form.reset();\n  };\n\n  return (\n    <Form onSubmit={handleSubmit} autoComplete=\"off\">\n      <TextField\n        id=\"standard-basic\"\n        type=\"text\"\n        name=\"name\"\n        label=\"Name\"\n        variant=\"outlined\"\n        required\n        inputProps={{\n          inputMode: 'text',\n          pattern: nameRegExp,\n        }}\n        fullWidth\n        sx={{\n          mb: '1rem',\n        }}\n      />\n      <TextField\n        id=\"standard-basic\"\n        type=\"tel\"\n        name=\"number\"\n        label=\"Number\"\n        variant=\"outlined\"\n        required\n        inputProps={{\n          inputMode: 'text',\n          pattern: phoneRegExp,\n        }}\n        fullWidth\n        sx={{\n          mb: '1rem',\n        }}\n      />\n\n      <Button\n        type=\"submit\"\n        variant=\"contained\"\n        sx={{\n          mt: '20px',\n        }}\n      >\n        Add contact\n      </Button>\n    </Form>\n  );\n};\n\nexport default ContactForm;","import styled from '@emotion/styled';\n\nexport const Item = styled.li`\n  min-width: 380px;\n  display: flex;\n  align-items: center;\n  &:not(:last-child) {\n    margin-bottom: 5px;\n  }\n`;\n\nexport const ContactInfo = styled.div`\n  /* min-width: 380px; */\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n`;\n\nexport const ContactName = styled.p`\n  display: flex;\n  gap: 10px;\n  max-width: 245px;\n  font-family: 'Segoe UI';\n  font-size: 18px;\n  font-weight: 600;\n`;\nexport const ContactTel = styled.p`\n  display: flex;\n  gap: 10px;\n  max-width: 245px;\n  font-family: 'Segoe UI';\n  font-size: 16px;\n`;\n\nexport const ContactEditInfo = styled.form`\n  /* min-width: 380px; */\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n`;\nexport const ContactEditInput = styled.input`\n  border: 1px solid orangered;\n  border-radius: 4px;\n  outline: 1px solid orangered;\n`;\n\nexport const ContactEditLabel = styled.label`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n  font-family: 'Segoe UI';\n  font-size: 12px;\n`;\n","import styled from '@emotion/styled';\n\nexport const ControlWrapper = styled.div`\n  display: flex;\n  gap: 4px;\n  margin-left: auto;\n`;","import PropTypes from 'prop-types';\nimport { ControlWrapper } from 'components/Control/Controls.styled';\nimport { IconButton } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport SaveIcon from '@mui/icons-material/Save';\n\nexport const Controls = ({ id, onDeleteContact, onEditContact }) => {\n  return (\n    <ControlWrapper>\n      <IconButton\n        type=\"button\"\n        size=\"large\"\n        color=\"primary\"\n        aria-label=\"edit\"\n        onClick={onEditContact}\n      >\n        <EditIcon />\n      </IconButton>\n\n      <IconButton\n        type=\"button\"\n        size=\"large\"\n        color=\"primary\"\n        aria-label=\"delete\"\n        onClick={() => onDeleteContact(id)}\n      >\n        <DeleteIcon />\n      </IconButton>\n    </ControlWrapper>\n  );\n};\n\nexport const ControlsSave = ({ id, onDeleteContact }) => {\n  return (\n    <ControlWrapper>\n      <IconButton type=\"submit\" size=\"large\" color=\"primary\" aria-label=\"save\">\n        <SaveIcon />\n      </IconButton>\n      <IconButton\n        type=\"button\"\n        size=\"large\"\n        color=\"primary\"\n        aria-label=\"delete\"\n        onClick={() => onDeleteContact(id)}\n      >\n        <DeleteIcon />\n      </IconButton>\n    </ControlWrapper>\n  );\n};\n\nControls.propTypes = {\n  id: PropTypes.string.isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n  onEditContact: PropTypes.func.isRequired,\n};\n\nControlsSave.propTypes = {\n  onDeleteContact: PropTypes.func.isRequired,\n  id: PropTypes.string.isRequired,\n};","import styled from '@emotion/styled';\nimport { Form, Field } from 'formik';\n\nexport const EditFormStyled = styled(Form)`\n  display: flex;\n  align-items: center;\n  width: 100%;\n`;\n\nexport const EditFormLabel = styled.label`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n  font-family: 'Segoe UI';\n  font-size: 14px;\n`;\nexport const EditInput = styled(Field)`\n  width: 180px;\n  border: 1px solid #1664e2;\n  border-radius: 4px;\n  outline: 1px solid #1664e2;\n`;\n\nexport const EditFormWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n`;\n\nexport const CustomError = styled.div`\n  position: absolute;\n  top: 0;\n  left: 100%;\n  padding: 3px;\n  width: 110px;\n  border: 1px solid red;\n  border-radius: 4px;\n  color: red;\n  font-size: 8px;\n`;","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { HiUser } from 'react-icons/hi';\nimport { ImPhone } from 'react-icons/im';\nimport { Formik, ErrorMessage } from 'formik';\nimport { object, string } from 'yup';\nimport {\n  EditFormStyled,\n  EditInput,\n  EditFormLabel,\n  CustomError,\n  EditFormWrapper,\n} from './EditForm.styled';\n\nconst nameRegExp = /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/;\nconst phoneRegExp =\n  /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/;\n\nlet userValidSchema = object({\n  name: string().matches(nameRegExp, 'Name is not valid!').required(),\n  number: string()\n    .matches(phoneRegExp, 'Phone number is not valid!')\n    .required(),\n});\n\nexport const EditForm=({ name, number, onEditContact, children })=> {\n  const handleSubmit = (values, { resetForm }) => {\n    const { name, number } = values;\n    onEditContact(name, number);\n    resetForm();\n  };\n  return (\n    <Formik\n      initialValues={{ name, number }}\n      validationSchema={userValidSchema}\n      onSubmit={handleSubmit}\n    >\n      <EditFormStyled autoComplete=\"off\">\n        <EditFormWrapper>\n          <EditFormLabel>\n            <HiUser fill=\"#1664e2\" />\n            <EditInput\n              type=\"text\"\n              name=\"name\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            />\n            <ErrorMessage component={CustomError} name=\"name\" />\n          </EditFormLabel>\n          <EditFormLabel>\n            <ImPhone fill=\"#1664e2\" />\n            <EditInput\n              type=\"tel\"\n              name=\"number\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            />\n            <ErrorMessage component={CustomError} name=\"number\" />\n          </EditFormLabel>\n        </EditFormWrapper>\n        {children}\n      </EditFormStyled>\n    </Formik>\n  );\n}\n\nEditForm.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  children: PropTypes.node,\n  onEditContact: PropTypes.func.isRequired,\n};\n\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { HiUser } from 'react-icons/hi';\nimport { ImPhone } from 'react-icons/im';\nimport {\n  ContactTel,\n  ContactName,\n  ContactInfo,\n} from 'components/ContactItem/ContactItem.styled';\nimport { Controls, ControlsSave } from 'components/Control/Controls';\nimport {EditForm} from 'components/EditForm/EditForm';\nimport { editContact, deleteContact } from 'redux/contacts/contactsOperation';\nimport { Box } from '@mui/material';\n\nexport const ContactItem=({ name, number, id })=> {\n  const [editName, setEditName] = useState(name);\n  const [editNumber, setEditNumber] = useState(number);\n  const [isEdit, setIsEdit] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const handleDeleteContact = id => {\n    dispatch(deleteContact(id));\n  };\n\n  const handleEditContact = (newName, newNumber) => {\n    if (!isEdit) {\n      setIsEdit(true);\n    } else {\n      setEditName(prevName => (newName ? newName : prevName));\n      setEditNumber(prevNumber => (newNumber ? newNumber : prevNumber));\n      setIsEdit(false);\n\n      dispatch(\n        editContact({\n          id: id,\n          name: newName ? newName : name,\n          number: newNumber ? newNumber : number,\n        })\n      );\n    }\n  };\n\n  return (\n    <Box\n      component=\"li\"\n      sx={{ display: 'flex', justifyContent: 'space-between', mb: '10px' }}\n    >\n      {/* if contact saved show contact info */}\n\n      {!isEdit && (\n        <>\n          <ContactInfo>\n            <ContactName>\n              <HiUser fill=\"#1976d2\" />\n              {name}:\n            </ContactName>\n\n            <ContactTel>\n              <ImPhone fill=\"#1976d2\" />\n              {number}\n            </ContactTel>\n          </ContactInfo>\n          <Controls\n            id={id}\n            onDeleteContact={handleDeleteContact}\n            onEditContact={handleEditContact}\n          />\n        </>\n      )}\n\n      {/* if contact is edit show edit form */}\n      {isEdit && (\n        <EditForm\n          name={editName}\n          number={editNumber}\n          onEditContact={handleEditContact}\n        >\n          <ControlsSave id={id} onDeleteContact={handleDeleteContact} />\n        </EditForm>\n      )}\n    </Box>\n  );\n}\n\nContactItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};\n\n\n","\nimport {ContactItem} from 'components/ContactItem/ContactItem';\nimport { useSelector } from 'react-redux';\nimport {\n  selectFilteredContacts,\n  selectFilteredContactsByNumber,\n} from 'redux/contacts/contactsSelectors';\n\nfunction ContactList() {\n  const contacts = useSelector(selectFilteredContacts);\n  const contactsByNumber = useSelector(selectFilteredContactsByNumber);\n\n  const uniqueContacts = [...contacts, ...contactsByNumber].filter(\n    (name, index, array) => array.indexOf(name) === index\n  );\n\n  return (\n    <ul>\n      {uniqueContacts.map(({ id, name, number }) => (\n        <ContactItem key={id} name={name} number={number} id={id} />\n      ))}\n    </ul>\n  );\n}\n\nexport default ContactList;\n","import { useDispatch } from 'react-redux';\nimport {\n  filterContacts,\n  filterContactsByNumber,\n} from 'redux/contacts/filterSlice';\nimport { Box, TextField } from '@mui/material';\n\nfunction Filter() {\n  const dispatch = useDispatch();\n\n  const handleSetFilter = evt => {\n    dispatch(filterContacts(evt.currentTarget.value));\n  };\n\n  const handleSetFilterByNumber = evt => {\n    dispatch(filterContactsByNumber(evt.currentTarget.value));\n  };\n\n  return (\n    <Box sx={{ display: 'flex', gap: '20px' }}>\n      <TextField\n        id=\"standard-basic\"\n        type=\"text\"\n        label=\"Find contacts by name\"\n        variant=\"outlined\"\n        onChange={handleSetFilter}\n        sx={{\n          mb: '1rem',\n        }}\n      />\n\n      <TextField\n        id=\"standard-basic\"\n        type=\"text\"\n        label=\"Find contacts by number\"\n        variant=\"outlined\"\n        onChange={handleSetFilterByNumber}\n        sx={{\n          mb: '1rem',\n        }}\n      />\n    </Box>\n  );\n}\n\nexport default Filter;\n\n\n","import { Badge, Box, Typography } from '@mui/material';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter  from 'components/Filter';\nimport Loader from 'components/Loader/Loader';\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/contactsOperation';\nimport {\n  selectIsLoading,\n  selectContacts,\n} from 'redux/contacts/contactsSelectors';\nimport PeopleIcon from '@mui/icons-material/People';\n\nfunction ContactsPage() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const contacts = useSelector(selectContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Box\n      sx={{\n        pt: '20px',\n        display: 'flex',\n        flexDirection: 'column',\n        gap: '15px',\n      }}\n    >\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <Typography\n        variant=\"h5\"\n        component=\"h2\"\n        sx={{\n          fontWeight: 600,\n          display: 'flex',\n          gap: '15px',\n          alignItems: 'center',\n        }}\n      >\n        Contacts{' '}\n        <Badge color=\"secondary\" badgeContent={contacts.length}>\n          <PeopleIcon />\n        </Badge>\n      </Typography>\n\n      <Filter />\n      {isLoading && <Loader />}\n      <ContactList />\n    </Box>\n  );\n}\n\nexport default ContactsPage;"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectFilter","filter","selectFilteredContacts","createSelector","filterValue","normalizedFilter","toLocaleLowerCase","trim","contact","name","includes","selectFilteredContactsByNumber","number","Form","styled","_templateObject","_taggedTemplateLiteral","_templateObject2","_templateObject3","dispatch","useDispatch","useSelector","_jsxs","onSubmit","evt","preventDefault","form","currentTarget","elements","value","some","toast","concat","addContact","id","nanoid","reset","autoComplete","children","_jsx","TextField","type","label","variant","required","inputProps","inputMode","pattern","fullWidth","sx","mb","Button","mt","ContactInfo","ContactName","ContactTel","_templateObject4","ControlWrapper","_templateObject5","_templateObject6","_templateObject7","Controls","_ref","onDeleteContact","onEditContact","IconButton","size","color","onClick","EditIcon","DeleteIcon","ControlsSave","_ref2","SaveIcon","EditFormStyled","EditFormLabel","EditInput","Field","EditFormWrapper","CustomError","userValidSchema","object","string","matches","EditForm","Formik","initialValues","validationSchema","values","resetForm","HiUser","fill","title","ErrorMessage","component","ImPhone","ContactItem","_useState","useState","_useState2","_slicedToArray","editName","setEditName","_useState3","_useState4","editNumber","setEditNumber","_useState5","_useState6","isEdit","setIsEdit","handleDeleteContact","deleteContact","handleEditContact","newName","newNumber","prevName","prevNumber","editContact","Box","display","justifyContent","_Fragment","contactsByNumber","uniqueContacts","_toConsumableArray","index","array","indexOf","map","gap","onChange","filterContacts","filterContactsByNumber","useEffect","fetchContacts","pt","flexDirection","ContactForm","Typography","fontWeight","alignItems","Badge","badgeContent","length","PeopleIcon","Filter","Loader","ContactList"],"sourceRoot":""}